{"is_source_file": true, "format": "TypeScript", "description": "This file defines a client-side store module for managing notes in a note-taking application. It includes types, in-memory state management, localStorage persistence, and functions for subscribing, creating, updating, selecting, deleting, and initializing notes.", "external_files": ["localStorage (browser environment)", "crypto (for crypto.randomUUID)"], "external_methods": ["localStorage.setItem", "localStorage.getItem", "localStorage.removeItem", "JSON.stringify", "JSON.parse", "crypto.randomUUID", "Date.now"], "published": ["subscribe", "getNotes", "getSelected", "selectNote", "createNote", "updateNote", "deleteNote", "initializeIfEmpty"], "classes": [], "methods": [{"name": "export function subscribe(listener: Listener): () => void { subscribe", "description": "Subscribes a listener function to store updates, returns an unsubscribe function.", "scope": "", "scopeKind": ""}, {"name": "export function getNotes(): Note[] { getNotes", "description": "Returns all notes sorted by most recently updated.", "scope": "", "scopeKind": ""}, {"name": "export function getSelected(): Note | null { getSelected", "description": "Retrieves the currently selected note, or null if none is selected.", "scope": "", "scopeKind": ""}, {"name": "export function selectNote(id: string | null): void { selectNote", "description": "Selects a note by its ID or clears selection if null.", "scope": "", "scopeKind": ""}, {"name": "export function createNote(): Note { createNote", "description": "Creates a new empty note with a unique ID, sets it as selected.", "scope": "", "scopeKind": ""}, {"name": "export function updateNote(id: string, fields: Partial<Omit<Note, \"id\">>): void { updateNote", "description": "Updates fields of a note specified by ID and refreshes its update timestamp.", "scope": "", "scopeKind": ""}, {"name": "export function deleteNote(id: string): void { deleteNote", "description": "Deletes a note by ID, updates selection if needed.", "scope": "", "scopeKind": ""}, {"name": "export function initializeIfEmpty(): void { initializeIfEmpty", "description": "Seeds the store with a default note if no notes exist.", "scope": "", "scopeKind": ""}, {"name": "function load() { load", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "function notify() { notify", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "function persist() { persist", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["localStorage.setItem", "localStorage.getItem", "localStorage.removeItem", "JSON.stringify", "JSON.parse", "crypto.randomUUID", "Date.now"], "search-terms": ["store", "notes", "localStorage", "persist", "reactive", "note management", "browser storage", "typescript store module"], "state": 2, "file_id": 8, "knowledge_revision": 17, "git_revision": "", "ctags": [{"_type": "tag", "name": "Listener", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-173224-173271/notes_frontend/src/lib/store.ts", "pattern": "/^type Listener = () => void;$/", "language": "TypeScript", "kind": "alias"}, {"_type": "tag", "name": "Note", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-173224-173271/notes_frontend/src/lib/store.ts", "pattern": "/^export type Note = {$/", "language": "TypeScript", "kind": "alias"}, {"_type": "tag", "name": "SELECTED_KEY", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-173224-173271/notes_frontend/src/lib/store.ts", "pattern": "/^const SELECTED_KEY = \"notes_app__selected\";$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "STORAGE_KEY", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-173224-173271/notes_frontend/src/lib/store.ts", "pattern": "/^const STORAGE_KEY = \"notes_app__notes\";$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "beforeLen", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-173224-173271/notes_frontend/src/lib/store.ts", "pattern": "/^  const beforeLen = notes.length;$/", "language": "TypeScript", "kind": "constant", "scope": "deleteNote", "scopeKind": "function"}, {"_type": "tag", "name": "createNote", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-173224-173271/notes_frontend/src/lib/store.ts", "pattern": "/^export function createNote(): Note {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "crypto", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-173224-173271/notes_frontend/src/lib/store.ts", "pattern": "/^    id: crypto.randomUUID ? crypto.randomUUID() : `${now}-${Math.random()}`,$/", "language": "TypeScript", "kind": "constant", "scope": "createNote", "scopeKind": "function"}, {"_type": "tag", "name": "deleteNote", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-173224-173271/notes_frontend/src/lib/store.ts", "pattern": "/^export function deleteNote(id: string): void {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "getNotes", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-173224-173271/notes_frontend/src/lib/store.ts", "pattern": "/^export function getNotes(): Note[] {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "getSelected", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-173224-173271/notes_frontend/src/lib/store.ts", "pattern": "/^export function getSelected(): Note | null {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "idx", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-173224-173271/notes_frontend/src/lib/store.ts", "pattern": "/^    const idx = listeners.indexOf(listener);$/", "language": "TypeScript", "kind": "constant", "scope": "subscribe", "scopeKind": "function"}, {"_type": "tag", "name": "idx", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-173224-173271/notes_frontend/src/lib/store.ts", "pattern": "/^  const idx = notes.findIndex((n) => n.id === id);$/", "language": "TypeScript", "kind": "constant", "scope": "updateNote", "scopeKind": "function"}, {"_type": "tag", "name": "initializeIfEmpty", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-173224-173271/notes_frontend/src/lib/store.ts", "pattern": "/^export function initializeIfEmpty(): void {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "listeners", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-173224-173271/notes_frontend/src/lib/store.ts", "pattern": "/^const listeners: Listener[] = [];$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "load", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-173224-173271/notes_frontend/src/lib/store.ts", "pattern": "/^function load() {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "note", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-173224-173271/notes_frontend/src/lib/store.ts", "pattern": "/^  const note: Note = {$/", "language": "TypeScript", "kind": "constant", "scope": "createNote", "scopeKind": "function"}, {"_type": "tag", "name": "notes", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-173224-173271/notes_frontend/src/lib/store.ts", "pattern": "/^let notes: Note[] = [];$/", "language": "TypeScript", "kind": "variable"}, {"_type": "tag", "name": "notify", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-173224-173271/notes_frontend/src/lib/store.ts", "pattern": "/^function notify() {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "now", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-173224-173271/notes_frontend/src/lib/store.ts", "pattern": "/^    const now = Date.now();$/", "language": "TypeScript", "kind": "constant", "scope": "initializeIfEmpty", "scopeKind": "function"}, {"_type": "tag", "name": "now", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-173224-173271/notes_frontend/src/lib/store.ts", "pattern": "/^  const now = Date.now();$/", "language": "TypeScript", "kind": "constant", "scope": "createNote", "scopeKind": "function"}, {"_type": "tag", "name": "now", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-173224-173271/notes_frontend/src/lib/store.ts", "pattern": "/^  const now = Date.now();$/", "language": "TypeScript", "kind": "constant", "scope": "updateNote", "scopeKind": "function"}, {"_type": "tag", "name": "persist", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-173224-173271/notes_frontend/src/lib/store.ts", "pattern": "/^function persist() {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "raw", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-173224-173271/notes_frontend/src/lib/store.ts", "pattern": "/^    const raw = localStorage.getItem(STORAGE_KEY);$/", "language": "TypeScript", "kind": "constant", "scope": "load", "scopeKind": "function"}, {"_type": "tag", "name": "sel", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-173224-173271/notes_frontend/src/lib/store.ts", "pattern": "/^    const sel = localStorage.getItem(SELECTED_KEY);$/", "language": "TypeScript", "kind": "constant", "scope": "load", "scopeKind": "function"}, {"_type": "tag", "name": "selectNote", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-173224-173271/notes_frontend/src/lib/store.ts", "pattern": "/^export function selectNote(id: string | null): void {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "selectedId", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-173224-173271/notes_frontend/src/lib/store.ts", "pattern": "/^let selectedId: string | null = null;$/", "language": "TypeScript", "kind": "variable"}, {"_type": "tag", "name": "subscribe", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-173224-173271/notes_frontend/src/lib/store.ts", "pattern": "/^export function subscribe(listener: Listener): () => void {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "updateNote", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-173224-173271/notes_frontend/src/lib/store.ts", "pattern": "/^export function updateNote(id: string, fields: Partial<Omit<Note, \"id\">>): void {$/", "language": "TypeScript", "kind": "function"}], "hash": "a0a53bee3eb2988e1ab92f3b06b2d9f4", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/lib/store.ts", "fields": [{"name": "let notes: Note[] = [];", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "let selectedId: string | null = null;", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"17": ""}]}